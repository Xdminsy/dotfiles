# For bash prompt
PS1='\033[36m\u@\033[34m\h:\033[32m\W \033[01;31m>\033[33m>\033[34m>\033[m '
# For zsh prompt
RPROMPT=$(echo '%{\033[31m%}%D %T%{\033[m%}')
PROMPT=$(echo '%{\033[36m%}%n@%{\033[34m%}%M:%{\033[32m%}%1d %{\033[01;31m%}>%{\033[33m%}>%{\033[34m%}>%{\033[m%} ')

alias rot13="tr a-zA-Z n-za-mN-ZA-M"
alias ls="ls --color=auto -hF"
alias vi="vim"
alias j="jobs"
export EDITOR="vim"
export PATH=~/npm-global/bin:$PATH
umask 022

# fortune | cowsay
# open a random manual when open shell
# man $(\ls /bin/ | shuf | head -1)

# For colourful man pages (CLUG-Wiki style)
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# For example, you can use `ls $(whereis w | skip 1)`
col() { awk -v col=$1 '{print $col}'; }
skip() { n=$(($1 + 1));cut -d' ' -f $n-; }

# Upload your ssh key to any remote server
upload-key() { ssh $1 'mkdir -p .ssh && cat >> .ssh/authorized_keys' ~/.ssh/id_ras.pub; }

mcd() { mkdir $1;cd $1; }

export PATH=~/mine/lib/jdk1.8.0_65/bin:$PATH
alias nethackalt="ssh nethack@alt.org"
alias updatedate='sudo ntpdate pool.ntp.org'


alias dpid="sudo docker inspect --format '{{.State.Pid}}'"
alias dip="sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

#the implementation refs from https://github.com/jpetazzo/nsenter/blob/master/docker-enter
function denter() {
    if [ -e $(echo "$0")/nsenter ]; then
        # with boot2docker, nsenter is not in the PATH but it is in the same folder
        NSENTER=$(dirname "$0")/nsenter
    else
        NSENTER=nsenter
    fi
    [ -z "$NSENTER" ] && echo "WARN Cannot find nsenter" && return

    if [ -z "$1" ]; then
        echo "Usage: `basename "$0"` CONTAINER [COMMAND [ARG]...]"
        echo ""
        echo "Enters the Docker CONTAINER and executes the specified COMMAND."
        echo "If COMMAND is not specified, runs an interactive shell in CONTAINER."
    else
        PID=$(sudo docker inspect --format "{{.State.Pid}}" "$1")
        if [ -z "$PID" ]; then
            echo "WARN Cannot find the given container"
            return
        fi
        shift

        OPTS="--target $PID --mount --uts --ipc --net --pid"

        if [ -z "$1" ]; then
            # No command given.
            # Use su to clear all host environment variables except for TERM,
            # initialize the environment variables HOME, SHELL, USER, LOGNAME, PATH,
            # and start a login shell.
            #sudo $NSENTER "$OPTS" su - root
            sudo $NSENTER --target $PID --mount --uts --ipc --net --pid su - root
        else
            # Use env to clear all host environment variables.
            sudo $NSENTER --target $PID --mount --uts --ipc --net --pid env -i $@
        fi
    fi
}
